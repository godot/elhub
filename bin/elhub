#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'elhub'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/elhub` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/elhub now"
  exit 64
end

include GLI::App

program_desc 'Describe your application here'

version Elhub::VERSION

desc 'Describe some flag here'
default_value 'default'
arg_name 'add'
flag [:f,:flagname]

desc 'Describe list here'
command :list do |c|
  c.desc 'display all'
  c.switch [:a, :all]

  c.desc 'Describe a flag to list'
  c.default_value 'local'
  c.flag :f
  c.action do |global_options,options,args|

    puts [global_options, options, args]


    if options[:all]
      Repository.find.each_with_index do |idx, repository|
        puts [idx, repositor]
      end
    end

  end
end

desc 'Describe complete here'
arg_name 'Describe arguments to complete here'
command :complete do |c|
  c.action do |global_options,options,args|
    puts "complete command ran"
    s = Sessions.create email: ENV['EMAIL'], password: ENV['PASSWORD']
    puts s.project_list
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
